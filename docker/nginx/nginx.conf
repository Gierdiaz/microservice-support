user nginx;
worker_processes auto;

events { 
    worker_connections 2048; # Aumentado para suportar mais conexões simultâneas
    multi_accept on;         # Aceitar múltiplas conexões ao mesmo tempo
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Performance
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout  65;
    keepalive_requests 1000;  # Número de requisições antes de fechar a conexão persistente
    client_max_body_size 10M; # Limitar o tamanho do corpo da requisição (ajuste conforme necessário)

    # Cache de DNS para reduzir latência
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Buffer para requisições e respostas
    client_body_buffer_size 16k;
    proxy_buffer_size 16k;
    proxy_buffers 8 16k;
    proxy_busy_buffers_size 24k;

    # Logs
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log warn;

    # Compressão (melhora performance em conexões lentas)
    gzip on;
    gzip_min_length 1024;
    gzip_types text/plain application/json application/javascript text/css;

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://app:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Timeouts para evitar bloqueios
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            # Limitar requisições por cliente (para evitar abuso)
            limit_req zone=one burst=10 nodelay;

            # Cache de resposta (se for adequado)
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Limite de requisições por IP
    limit_req_zone $binary_remote_addr zone=one:10m rate=30r/s; # 30 requisições por segundo
}
